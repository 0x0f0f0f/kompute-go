/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: kompute.i

package kompute

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
extern void _wrap_Swig_free_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_kompute_209ca5717ea3ce19(swig_intgo arg1);
extern uintptr_t _wrap_new_FloatVector__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_FloatVector__SWIG_1_kompute_209ca5717ea3ce19(swig_type_1 arg1);
extern uintptr_t _wrap_new_FloatVector__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern swig_type_2 _wrap_FloatVector_size_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern swig_type_3 _wrap_FloatVector_capacity_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_FloatVector_reserve_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_type_4 arg2);
extern _Bool _wrap_FloatVector_isEmpty_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_FloatVector_clear_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_FloatVector_add_kompute_209ca5717ea3ce19(uintptr_t arg1, float arg2);
extern float _wrap_FloatVector_get_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_FloatVector_set_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_intgo arg2, float arg3);
extern void _wrap_delete_FloatVector_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_ByteVector__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_ByteVector__SWIG_1_kompute_209ca5717ea3ce19(swig_type_5 arg1);
extern uintptr_t _wrap_new_ByteVector__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern swig_type_6 _wrap_ByteVector_size_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern swig_type_7 _wrap_ByteVector_capacity_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_ByteVector_reserve_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_type_8 arg2);
extern _Bool _wrap_ByteVector_isEmpty_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_ByteVector_clear_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_ByteVector_add_kompute_209ca5717ea3ce19(uintptr_t arg1, char arg2);
extern char _wrap_ByteVector_get_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ByteVector_set_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_intgo arg2, char arg3);
extern void _wrap_delete_ByteVector_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern swig_voidp _wrap_shaders_glsl_opmult_comp_spv_get_kompute_209ca5717ea3ce19(void);
extern swig_intgo _wrap_shaders_glsl_opmult_comp_spv_len_get_kompute_209ca5717ea3ce19(void);
extern swig_voidp _wrap_shaders_glsl_logisticregression_comp_spv_get_kompute_209ca5717ea3ce19(void);
extern swig_intgo _wrap_shaders_glsl_logisticregression_comp_spv_len_get_kompute_209ca5717ea3ce19(void);
extern swig_intgo _wrap_TensorTypes_eDevice_Tensor_kompute_209ca5717ea3ce19(void);
extern swig_intgo _wrap_TensorTypes_eStaging_Tensor_kompute_209ca5717ea3ce19(void);
extern swig_intgo _wrap_TensorTypes_eStorage_Tensor_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_Tensor__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_Tensor__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_Tensor__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_delete_Tensor_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Tensor_init_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Tensor_freeMemoryDestroyGPUResources_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_Tensor_data_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_Tensor_size_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_Tensor_shape_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern swig_intgo _wrap_Tensor_tensorType_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Tensor_isInit_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Tensor_setData_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Tensor_recordCopyFrom_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern void _wrap_Tensor_recordBufferMemoryBarrier_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern uintptr_t _wrap_Tensor_constructDescriptorBufferInfo_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Tensor_mapDataFromHostMemory_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Tensor_mapDataIntoHostMemory_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_delete_OpBase_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpBase_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpBase_record_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpBase_preEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpBase_postEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_Sequence__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_Sequence__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_Sequence_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Sequence_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_begin_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_end_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_eval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_evalAsync_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_evalAwait__SWIG_0_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Sequence_evalAwait__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_isRecording_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_isRunning_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern _Bool _wrap_Sequence_isInit_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Sequence_freeMemoryDestroyGPUResources_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_OpTensorCreate__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_OpTensorCreate__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_OpTensorCreate_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCreate_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCreate_record_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCreate_preEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCreate_postEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_Manager__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_Manager__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_Manager__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_Manager__SWIG_3_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_Manager_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_Manager_getOrCreateManagedSequence_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_type_9 arg2);
extern uintptr_t _wrap_Manager_createManagedSequence__SWIG_0_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_type_10 arg2, uintptr_t arg3);
extern uintptr_t _wrap_Manager_createManagedSequence__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_type_11 arg2);
extern uintptr_t _wrap_Manager_createManagedSequence__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Manager_evalOpAwait__SWIG_0_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_type_12 arg2, uintptr_t arg3);
extern void _wrap_Manager_evalOpAwait__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, swig_type_13 arg2);
extern void _wrap_Manager_evalOpAwaitDefault__SWIG_0_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Manager_evalOpAwaitDefault__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_Manager_buildTensor__SWIG_0_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_Manager_buildTensor__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_Algorithm__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_Algorithm__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Algorithm_init_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_delete_Algorithm_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_Algorithm_recordDispatch__SWIG_0_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_Algorithm_recordDispatch__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Algorithm_recordDispatch__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Algorithm_recordDispatch__SWIG_3_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_OpAlgoBase__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_OpAlgoBase__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_new_OpAlgoBase__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_OpAlgoBase__SWIG_3_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_type_14 arg5, uintptr_t arg6);
extern uintptr_t _wrap_new_OpAlgoBase__SWIG_4_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_type_15 arg5);
extern uintptr_t _wrap_new_OpAlgoBase__SWIG_5_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern uintptr_t _wrap_new_OpAlgoBase__SWIG_6_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_delete_OpAlgoBase_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoBase_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoBase_record_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoBase_preEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoBase_postEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_OpAlgoLhsRhsOut__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_OpAlgoLhsRhsOut__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_new_OpAlgoLhsRhsOut__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_OpAlgoLhsRhsOut_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoLhsRhsOut_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoLhsRhsOut_record_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoLhsRhsOut_postEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpAlgoLhsRhsOut_preEval_kompute_209ca5717ea3ce19(uintptr_t _swig_base);
extern uintptr_t _wrap_new_OpMult__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_OpMult__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_new_OpMult__SWIG_2_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_OpMult_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpMult_init_kompute_209ca5717ea3ce19(uintptr_t _swig_base);
extern void _wrap_OpMult_record_kompute_209ca5717ea3ce19(uintptr_t _swig_base);
extern void _wrap_OpMult_preEval_kompute_209ca5717ea3ce19(uintptr_t _swig_base);
extern void _wrap_OpMult_postEval_kompute_209ca5717ea3ce19(uintptr_t _swig_base);
extern uintptr_t _wrap_new_OpTensorCopy__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_OpTensorCopy__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_OpTensorCopy_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCopy_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCopy_record_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCopy_preEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorCopy_postEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_OpTensorSyncDevice__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_OpTensorSyncDevice__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_OpTensorSyncDevice_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncDevice_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncDevice_record_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncDevice_preEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncDevice_postEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern uintptr_t _wrap_new_OpTensorSyncLocal__SWIG_0_kompute_209ca5717ea3ce19(void);
extern uintptr_t _wrap_new_OpTensorSyncLocal__SWIG_1_kompute_209ca5717ea3ce19(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_delete_OpTensorSyncLocal_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncLocal_init_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncLocal_record_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncLocal_preEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
extern void _wrap_OpTensorSyncLocal_postEval_kompute_209ca5717ea3ce19(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_kompute_209ca5717ea3ce19(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrFloatVector uintptr

func (p SwigcptrFloatVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFloatVector) SwigIsFloatVector() {
}

func NewFloatVector__SWIG_0() (_swig_ret FloatVector) {
	var swig_r FloatVector
	swig_r = (FloatVector)(SwigcptrFloatVector(C._wrap_new_FloatVector__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewFloatVector__SWIG_1(arg1 int64) (_swig_ret FloatVector) {
	var swig_r FloatVector
	_swig_i_0 := arg1
	swig_r = (FloatVector)(SwigcptrFloatVector(C._wrap_new_FloatVector__SWIG_1_kompute_209ca5717ea3ce19(C.swig_type_1(_swig_i_0))))
	return swig_r
}

func NewFloatVector__SWIG_2(arg1 FloatVector) (_swig_ret FloatVector) {
	var swig_r FloatVector
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (FloatVector)(SwigcptrFloatVector(C._wrap_new_FloatVector__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewFloatVector(a ...interface{}) FloatVector {
	argc := len(a)
	if argc == 0 {
		return NewFloatVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewFloatVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewFloatVector__SWIG_2(a[0].(FloatVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFloatVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_FloatVector_size_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFloatVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_FloatVector_capacity_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFloatVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FloatVector_reserve_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.swig_type_4(_swig_i_1))
}

func (arg1 SwigcptrFloatVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FloatVector_isEmpty_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFloatVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_FloatVector_clear_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFloatVector) Add(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FloatVector_add_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFloatVector) Get(arg2 int) (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float32)(C._wrap_FloatVector_get_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrFloatVector) Set(arg2 int, arg3 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_FloatVector_set_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.float(_swig_i_2))
}

func DeleteFloatVector(arg1 FloatVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FloatVector_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

type FloatVector interface {
	Swigcptr() uintptr
	SwigIsFloatVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 float32)
	Get(arg2 int) (_swig_ret float32)
	Set(arg2 int, arg3 float32)
}

type SwigcptrByteVector uintptr

func (p SwigcptrByteVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrByteVector) SwigIsByteVector() {
}

func NewByteVector__SWIG_0() (_swig_ret ByteVector) {
	var swig_r ByteVector
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewByteVector__SWIG_1(arg1 int64) (_swig_ret ByteVector) {
	var swig_r ByteVector
	_swig_i_0 := arg1
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_1_kompute_209ca5717ea3ce19(C.swig_type_5(_swig_i_0))))
	return swig_r
}

func NewByteVector__SWIG_2(arg1 ByteVector) (_swig_ret ByteVector) {
	var swig_r ByteVector
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewByteVector(a ...interface{}) ByteVector {
	argc := len(a)
	if argc == 0 {
		return NewByteVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewByteVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewByteVector__SWIG_2(a[0].(ByteVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrByteVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_size_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_capacity_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_reserve_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.swig_type_8(_swig_i_1))
}

func (arg1 SwigcptrByteVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ByteVector_isEmpty_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_ByteVector_clear_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrByteVector) Add(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_add_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrByteVector) Get(arg2 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_ByteVector_get_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Set(arg2 int, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ByteVector_set_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

func DeleteByteVector(arg1 ByteVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ByteVector_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

type ByteVector interface {
	Swigcptr() uintptr
	SwigIsByteVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

const KOMPUTE_VK_API_MAJOR_VERSION int = 1
const KOMPUTE_VK_API_MINOR_VERSION int = 1
func GetShaders_glsl_opmult_comp_spv() (_swig_ret *byte) {
	var swig_r *byte
	swig_r = (*byte)(C._wrap_shaders_glsl_opmult_comp_spv_get_kompute_209ca5717ea3ce19())
	return swig_r
}

func GetShaders_glsl_opmult_comp_spv_len() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_shaders_glsl_opmult_comp_spv_len_get_kompute_209ca5717ea3ce19())
	return swig_r
}

func GetShaders_glsl_logisticregression_comp_spv() (_swig_ret *byte) {
	var swig_r *byte
	swig_r = (*byte)(C._wrap_shaders_glsl_logisticregression_comp_spv_get_kompute_209ca5717ea3ce19())
	return swig_r
}

func GetShaders_glsl_logisticregression_comp_spv_len() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_shaders_glsl_logisticregression_comp_spv_len_get_kompute_209ca5717ea3ce19())
	return swig_r
}

const KP_MAX_DIM_SIZE int = 1
type SwigcptrTensor uintptr

func (p SwigcptrTensor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTensor) SwigIsTensor() {
}

type KpTensorTensorTypes int
func _swig_getTensor_TensorTypes_eDevice_Tensor() (_swig_ret KpTensorTensorTypes) {
	var swig_r KpTensorTensorTypes
	swig_r = (KpTensorTensorTypes)(C._wrap_TensorTypes_eDevice_Tensor_kompute_209ca5717ea3ce19())
	return swig_r
}

var TensorTensorTypes_eDevice KpTensorTensorTypes = _swig_getTensor_TensorTypes_eDevice_Tensor()
func _swig_getTensor_TensorTypes_eStaging_Tensor() (_swig_ret KpTensorTensorTypes) {
	var swig_r KpTensorTensorTypes
	swig_r = (KpTensorTensorTypes)(C._wrap_TensorTypes_eStaging_Tensor_kompute_209ca5717ea3ce19())
	return swig_r
}

var TensorTensorTypes_eStaging KpTensorTensorTypes = _swig_getTensor_TensorTypes_eStaging_Tensor()
func _swig_getTensor_TensorTypes_eStorage_Tensor() (_swig_ret KpTensorTensorTypes) {
	var swig_r KpTensorTensorTypes
	swig_r = (KpTensorTensorTypes)(C._wrap_TensorTypes_eStorage_Tensor_kompute_209ca5717ea3ce19())
	return swig_r
}

var TensorTensorTypes_eStorage KpTensorTensorTypes = _swig_getTensor_TensorTypes_eStorage_Tensor()
func NewTensor__SWIG_0() (_swig_ret Tensor) {
	var swig_r Tensor
	swig_r = (Tensor)(SwigcptrTensor(C._wrap_new_Tensor__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewTensor__SWIG_1(arg1 FloatVector, arg2 KpTensorTensorTypes) (_swig_ret Tensor) {
	var swig_r Tensor
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (Tensor)(SwigcptrTensor(C._wrap_new_Tensor__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func NewTensor__SWIG_2(arg1 FloatVector) (_swig_ret Tensor) {
	var swig_r Tensor
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Tensor)(SwigcptrTensor(C._wrap_new_Tensor__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewTensor(a ...interface{}) Tensor {
	argc := len(a)
	if argc == 0 {
		return NewTensor__SWIG_0()
	}
	if argc == 1 {
		return NewTensor__SWIG_2(a[0].(FloatVector))
	}
	if argc == 2 {
		return NewTensor__SWIG_1(a[0].(FloatVector), a[1].(KpTensorTensorTypes))
	}
	panic("No match for overloaded function call")
}

func DeleteTensor(arg1 Tensor) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Tensor_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTensor) Init(arg2 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg3 Std_shared_ptr_Sl_vk_Device_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Tensor_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrTensor) FreeMemoryDestroyGPUResources() {
	_swig_i_0 := arg1
	C._wrap_Tensor_freeMemoryDestroyGPUResources_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTensor) Data() (_swig_ret FloatVector) {
	var swig_r FloatVector
	_swig_i_0 := arg1
	swig_r = (FloatVector)(SwigcptrFloatVector(C._wrap_Tensor_data_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrTensor) Size() (_swig_ret Uint32_t) {
	var swig_r Uint32_t
	_swig_i_0 := arg1
	swig_r = (Uint32_t)(SwigcptrUint32_t(C._wrap_Tensor_size_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrTensor) Shape() (_swig_ret Std_array_Sl_uint32_t_Sc_1_Sg_) {
	var swig_r Std_array_Sl_uint32_t_Sc_1_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_array_Sl_uint32_t_Sc_1_Sg_)(SwigcptrStd_array_Sl_uint32_t_Sc_1_Sg_(C._wrap_Tensor_shape_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrTensor) TensorType() (_swig_ret KpTensorTensorTypes) {
	var swig_r KpTensorTensorTypes
	_swig_i_0 := arg1
	swig_r = (KpTensorTensorTypes)(C._wrap_Tensor_tensorType_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTensor) IsInit() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Tensor_isInit_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrTensor) SetData(arg2 FloatVector) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Tensor_setData_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrTensor) RecordCopyFrom(arg2 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg3 Std_shared_ptr_Sl_kp_Tensor_Sg_, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_Tensor_recordCopyFrom_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrTensor) RecordBufferMemoryBarrier(arg2 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg3 Vk_AccessFlagBits, arg4 Vk_AccessFlagBits, arg5 Vk_PipelineStageFlagBits, arg6 Vk_PipelineStageFlagBits) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	C._wrap_Tensor_recordBufferMemoryBarrier_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))
}

func (arg1 SwigcptrTensor) ConstructDescriptorBufferInfo() (_swig_ret Vk_DescriptorBufferInfo) {
	var swig_r Vk_DescriptorBufferInfo
	_swig_i_0 := arg1
	swig_r = (Vk_DescriptorBufferInfo)(SwigcptrVk_DescriptorBufferInfo(C._wrap_Tensor_constructDescriptorBufferInfo_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrTensor) MapDataFromHostMemory() {
	_swig_i_0 := arg1
	C._wrap_Tensor_mapDataFromHostMemory_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTensor) MapDataIntoHostMemory() {
	_swig_i_0 := arg1
	C._wrap_Tensor_mapDataIntoHostMemory_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

type Tensor interface {
	Swigcptr() uintptr
	SwigIsTensor()
	Init(arg2 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg3 Std_shared_ptr_Sl_vk_Device_Sg_)
	FreeMemoryDestroyGPUResources()
	Data() (_swig_ret FloatVector)
	Size() (_swig_ret Uint32_t)
	Shape() (_swig_ret Std_array_Sl_uint32_t_Sc_1_Sg_)
	TensorType() (_swig_ret KpTensorTensorTypes)
	IsInit() (_swig_ret bool)
	SetData(arg2 FloatVector)
	RecordCopyFrom(arg2 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg3 Std_shared_ptr_Sl_kp_Tensor_Sg_, arg4 bool)
	RecordBufferMemoryBarrier(arg2 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg3 Vk_AccessFlagBits, arg4 Vk_AccessFlagBits, arg5 Vk_PipelineStageFlagBits, arg6 Vk_PipelineStageFlagBits)
	ConstructDescriptorBufferInfo() (_swig_ret Vk_DescriptorBufferInfo)
	MapDataFromHostMemory()
	MapDataIntoHostMemory()
}

type SwigcptrOpBase uintptr

func (p SwigcptrOpBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpBase) SwigIsOpBase() {
}

func DeleteOpBase(arg1 OpBase) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpBase_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpBase) Init() {
	_swig_i_0 := arg1
	C._wrap_OpBase_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpBase) Record() {
	_swig_i_0 := arg1
	C._wrap_OpBase_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpBase) PreEval() {
	_swig_i_0 := arg1
	C._wrap_OpBase_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpBase) PostEval() {
	_swig_i_0 := arg1
	C._wrap_OpBase_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

type OpBase interface {
	Swigcptr() uintptr
	SwigIsOpBase()
	Init()
	Record()
	PreEval()
	PostEval()
}

type SwigcptrSequence uintptr

func (p SwigcptrSequence) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSequence) SwigIsSequence() {
}

func NewSequence__SWIG_0() (_swig_ret Sequence) {
	var swig_r Sequence
	swig_r = (Sequence)(SwigcptrSequence(C._wrap_new_Sequence__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewSequence__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_Queue_Sg_, arg4 Uint32_t) (_swig_ret Sequence) {
	var swig_r Sequence
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Sequence)(SwigcptrSequence(C._wrap_new_Sequence__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewSequence(a ...interface{}) Sequence {
	argc := len(a)
	if argc == 0 {
		return NewSequence__SWIG_0()
	}
	if argc == 4 {
		return NewSequence__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_Queue_Sg_), a[3].(Uint32_t))
	}
	panic("No match for overloaded function call")
}

func DeleteSequence(arg1 Sequence) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Sequence_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSequence) Init() {
	_swig_i_0 := arg1
	C._wrap_Sequence_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSequence) Begin() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_begin_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequence) End() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_end_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequence) Eval() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_eval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequence) EvalAsync() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_evalAsync_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequence) EvalAwait__SWIG_0(arg2 Uint64_t) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Sequence_evalAwait__SWIG_0_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSequence) EvalAwait__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_evalAwait__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrSequence) EvalAwait(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.EvalAwait__SWIG_1()
	}
	if argc == 1 {
		return p.EvalAwait__SWIG_0(a[0].(Uint64_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSequence) IsRecording() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_isRecording_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequence) IsRunning() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_isRunning_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequence) IsInit() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Sequence_isInit_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSequence) FreeMemoryDestroyGPUResources() {
	_swig_i_0 := arg1
	C._wrap_Sequence_freeMemoryDestroyGPUResources_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

type Sequence interface {
	Swigcptr() uintptr
	SwigIsSequence()
	Init()
	Begin() (_swig_ret bool)
	End() (_swig_ret bool)
	Eval() (_swig_ret bool)
	EvalAsync() (_swig_ret bool)
	EvalAwait(a ...interface{}) bool
	IsRecording() (_swig_ret bool)
	IsRunning() (_swig_ret bool)
	IsInit() (_swig_ret bool)
	FreeMemoryDestroyGPUResources()
}

type SwigcptrOpTensorCreate uintptr

func (p SwigcptrOpTensorCreate) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpTensorCreate) SwigIsOpTensorCreate() {
}

func NewOpTensorCreate__SWIG_0() (_swig_ret OpTensorCreate) {
	var swig_r OpTensorCreate
	swig_r = (OpTensorCreate)(SwigcptrOpTensorCreate(C._wrap_new_OpTensorCreate__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewOpTensorCreate__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) (_swig_ret OpTensorCreate) {
	var swig_r OpTensorCreate
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (OpTensorCreate)(SwigcptrOpTensorCreate(C._wrap_new_OpTensorCreate__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewOpTensorCreate(a ...interface{}) OpTensorCreate {
	argc := len(a)
	if argc == 0 {
		return NewOpTensorCreate__SWIG_0()
	}
	if argc == 4 {
		return NewOpTensorCreate__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

func DeleteOpTensorCreate(arg1 OpTensorCreate) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpTensorCreate_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCreate) Init() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCreate_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCreate) Record() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCreate_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCreate) PreEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCreate_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCreate) PostEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCreate_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrOpTensorCreate) SwigIsOpBase() {
}

func (p SwigcptrOpTensorCreate) SwigGetOpBase() OpBase {
	return SwigcptrOpBase(p.Swigcptr())
}

type OpTensorCreate interface {
	Swigcptr() uintptr
	SwigIsOpTensorCreate()
	Init()
	Record()
	PreEval()
	PostEval()
	SwigIsOpBase()
	SwigGetOpBase() OpBase
}

const KP_DEFAULT_SESSION string = "DEFAULT"
type SwigcptrManager uintptr

func (p SwigcptrManager) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrManager) SwigIsManager() {
}

func NewManager__SWIG_0() (_swig_ret Manager) {
	var swig_r Manager
	swig_r = (Manager)(SwigcptrManager(C._wrap_new_Manager__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewManager__SWIG_1(arg1 Uint32_t, arg2 Std_vector_Sl_uint32_t_Sg_) (_swig_ret Manager) {
	var swig_r Manager
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Manager)(SwigcptrManager(C._wrap_new_Manager__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewManager__SWIG_2(arg1 Uint32_t) (_swig_ret Manager) {
	var swig_r Manager
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Manager)(SwigcptrManager(C._wrap_new_Manager__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewManager__SWIG_3(arg1 Std_shared_ptr_Sl_vk_Instance_Sg_, arg2 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg3 Std_shared_ptr_Sl_vk_Device_Sg_, arg4 Uint32_t) (_swig_ret Manager) {
	var swig_r Manager
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Manager)(SwigcptrManager(C._wrap_new_Manager__SWIG_3_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewManager(a ...interface{}) Manager {
	argc := len(a)
	if argc == 0 {
		return NewManager__SWIG_0()
	}
	if argc == 1 {
		return NewManager__SWIG_2(a[0].(Uint32_t))
	}
	if argc == 2 {
		return NewManager__SWIG_1(a[0].(Uint32_t), a[1].(Std_vector_Sl_uint32_t_Sg_))
	}
	if argc == 4 {
		return NewManager__SWIG_3(a[0].(Std_shared_ptr_Sl_vk_Instance_Sg_), a[1].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[2].(Std_shared_ptr_Sl_vk_Device_Sg_), a[3].(Uint32_t))
	}
	panic("No match for overloaded function call")
}

func DeleteManager(arg1 Manager) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Manager_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrManager) GetOrCreateManagedSequence(arg2 string) (_swig_ret Std_shared_ptr_Sl_kp_Sequence_Sg_) {
	var swig_r Std_shared_ptr_Sl_kp_Sequence_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_shared_ptr_Sl_kp_Sequence_Sg_)(SwigcptrStd_shared_ptr_Sl_kp_Sequence_Sg_(C._wrap_Manager_getOrCreateManagedSequence_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrManager) CreateManagedSequence__SWIG_0(arg2 string, arg3 Uint32_t) (_swig_ret Std_shared_ptr_Sl_kp_Sequence_Sg_) {
	var swig_r Std_shared_ptr_Sl_kp_Sequence_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Std_shared_ptr_Sl_kp_Sequence_Sg_)(SwigcptrStd_shared_ptr_Sl_kp_Sequence_Sg_(C._wrap_Manager_createManagedSequence__SWIG_0_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), *(*C.swig_type_10)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrManager) CreateManagedSequence__SWIG_1(arg2 string) (_swig_ret Std_shared_ptr_Sl_kp_Sequence_Sg_) {
	var swig_r Std_shared_ptr_Sl_kp_Sequence_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_shared_ptr_Sl_kp_Sequence_Sg_)(SwigcptrStd_shared_ptr_Sl_kp_Sequence_Sg_(C._wrap_Manager_createManagedSequence__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrManager) CreateManagedSequence__SWIG_2() (_swig_ret Std_shared_ptr_Sl_kp_Sequence_Sg_) {
	var swig_r Std_shared_ptr_Sl_kp_Sequence_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_shared_ptr_Sl_kp_Sequence_Sg_)(SwigcptrStd_shared_ptr_Sl_kp_Sequence_Sg_(C._wrap_Manager_createManagedSequence__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrManager) CreateManagedSequence(a ...interface{}) Std_shared_ptr_Sl_kp_Sequence_Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.CreateManagedSequence__SWIG_2()
	}
	if argc == 1 {
		return p.CreateManagedSequence__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return p.CreateManagedSequence__SWIG_0(a[0].(string), a[1].(Uint32_t))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrManager) EvalOpAwait__SWIG_0(arg2 string, arg3 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Manager_evalOpAwait__SWIG_0_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrManager) EvalOpAwait__SWIG_1(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Manager_evalOpAwait__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrManager) EvalOpAwait(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.EvalOpAwait__SWIG_1(a[0].(string))
		return
	}
	if argc == 2 {
		p.EvalOpAwait__SWIG_0(a[0].(string), a[1].(Uint64_t))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrManager) EvalOpAwaitDefault__SWIG_0(arg2 Uint64_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Manager_evalOpAwaitDefault__SWIG_0_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrManager) EvalOpAwaitDefault__SWIG_1() {
	_swig_i_0 := arg1
	C._wrap_Manager_evalOpAwaitDefault__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrManager) EvalOpAwaitDefault(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.EvalOpAwaitDefault__SWIG_1()
		return
	}
	if argc == 1 {
		p.EvalOpAwaitDefault__SWIG_0(a[0].(Uint64_t))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrManager) BuildTensor__SWIG_0(arg2 FloatVector, arg3 KpTensorTensorTypes) (_swig_ret Std_shared_ptr_Sl_kp_Tensor_Sg_) {
	var swig_r Std_shared_ptr_Sl_kp_Tensor_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Std_shared_ptr_Sl_kp_Tensor_Sg_)(SwigcptrStd_shared_ptr_Sl_kp_Tensor_Sg_(C._wrap_Manager_buildTensor__SWIG_0_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrManager) BuildTensor__SWIG_1(arg2 FloatVector) (_swig_ret Std_shared_ptr_Sl_kp_Tensor_Sg_) {
	var swig_r Std_shared_ptr_Sl_kp_Tensor_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Std_shared_ptr_Sl_kp_Tensor_Sg_)(SwigcptrStd_shared_ptr_Sl_kp_Tensor_Sg_(C._wrap_Manager_buildTensor__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrManager) BuildTensor(a ...interface{}) Std_shared_ptr_Sl_kp_Tensor_Sg_ {
	argc := len(a)
	if argc == 1 {
		return p.BuildTensor__SWIG_1(a[0].(FloatVector))
	}
	if argc == 2 {
		return p.BuildTensor__SWIG_0(a[0].(FloatVector), a[1].(KpTensorTensorTypes))
	}
	panic("No match for overloaded function call")
}

type Manager interface {
	Swigcptr() uintptr
	SwigIsManager()
	GetOrCreateManagedSequence(arg2 string) (_swig_ret Std_shared_ptr_Sl_kp_Sequence_Sg_)
	CreateManagedSequence(a ...interface{}) Std_shared_ptr_Sl_kp_Sequence_Sg_
	EvalOpAwait(a ...interface{})
	EvalOpAwaitDefault(a ...interface{})
	BuildTensor(a ...interface{}) Std_shared_ptr_Sl_kp_Tensor_Sg_
}

type SwigcptrAlgorithm uintptr

func (p SwigcptrAlgorithm) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAlgorithm) SwigIsAlgorithm() {
}

func NewAlgorithm__SWIG_0() (_swig_ret Algorithm) {
	var swig_r Algorithm
	swig_r = (Algorithm)(SwigcptrAlgorithm(C._wrap_new_Algorithm__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewAlgorithm__SWIG_1(arg1 Std_shared_ptr_Sl_vk_Device_Sg_, arg2 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_) (_swig_ret Algorithm) {
	var swig_r Algorithm
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Algorithm)(SwigcptrAlgorithm(C._wrap_new_Algorithm__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewAlgorithm(a ...interface{}) Algorithm {
	argc := len(a)
	if argc == 0 {
		return NewAlgorithm__SWIG_0()
	}
	if argc == 2 {
		return NewAlgorithm__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_Device_Sg_), a[1].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrAlgorithm) Init(arg2 ByteVector, arg3 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Algorithm_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteAlgorithm(arg1 Algorithm) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Algorithm_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrAlgorithm) RecordDispatch__SWIG_0(arg2 Uint32_t, arg3 Uint32_t, arg4 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_Algorithm_recordDispatch__SWIG_0_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrAlgorithm) RecordDispatch__SWIG_1(arg2 Uint32_t, arg3 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Algorithm_recordDispatch__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrAlgorithm) RecordDispatch__SWIG_2(arg2 Uint32_t) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Algorithm_recordDispatch__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrAlgorithm) RecordDispatch__SWIG_3() {
	_swig_i_0 := arg1
	C._wrap_Algorithm_recordDispatch__SWIG_3_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrAlgorithm) RecordDispatch(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.RecordDispatch__SWIG_3()
		return
	}
	if argc == 1 {
		p.RecordDispatch__SWIG_2(a[0].(Uint32_t))
		return
	}
	if argc == 2 {
		p.RecordDispatch__SWIG_1(a[0].(Uint32_t), a[1].(Uint32_t))
		return
	}
	if argc == 3 {
		p.RecordDispatch__SWIG_0(a[0].(Uint32_t), a[1].(Uint32_t), a[2].(Uint32_t))
		return
	}
	panic("No match for overloaded function call")
}

type Algorithm interface {
	Swigcptr() uintptr
	SwigIsAlgorithm()
	Init(arg2 ByteVector, arg3 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_)
	RecordDispatch(a ...interface{})
}

type SwigcptrOpAlgoBase uintptr

func (p SwigcptrOpAlgoBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpAlgoBase) SwigIsOpAlgoBase() {
}

func NewOpAlgoBase__SWIG_0() (_swig_ret OpAlgoBase) {
	var swig_r OpAlgoBase
	swig_r = (OpAlgoBase)(SwigcptrOpAlgoBase(C._wrap_new_OpAlgoBase__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewOpAlgoBase__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_, arg5 Kp_OpAlgoBase_KomputeWorkgroup) (_swig_ret OpAlgoBase) {
	var swig_r OpAlgoBase
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (OpAlgoBase)(SwigcptrOpAlgoBase(C._wrap_new_OpAlgoBase__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func NewOpAlgoBase__SWIG_2(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) (_swig_ret OpAlgoBase) {
	var swig_r OpAlgoBase
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (OpAlgoBase)(SwigcptrOpAlgoBase(C._wrap_new_OpAlgoBase__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewOpAlgoBase__SWIG_3(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_, arg5 string, arg6 Kp_OpAlgoBase_KomputeWorkgroup) (_swig_ret OpAlgoBase) {
	var swig_r OpAlgoBase
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	swig_r = (OpAlgoBase)(SwigcptrOpAlgoBase(C._wrap_new_OpAlgoBase__SWIG_3_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), *(*C.swig_type_14)(unsafe.Pointer(&_swig_i_4)), C.uintptr_t(_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func NewOpAlgoBase__SWIG_4(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_, arg5 string) (_swig_ret OpAlgoBase) {
	var swig_r OpAlgoBase
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (OpAlgoBase)(SwigcptrOpAlgoBase(C._wrap_new_OpAlgoBase__SWIG_4_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), *(*C.swig_type_15)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func NewOpAlgoBase__SWIG_5(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_, arg5 ByteVector, arg6 Kp_OpAlgoBase_KomputeWorkgroup) (_swig_ret OpAlgoBase) {
	var swig_r OpAlgoBase
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	swig_r = (OpAlgoBase)(SwigcptrOpAlgoBase(C._wrap_new_OpAlgoBase__SWIG_5_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))))
	return swig_r
}

func NewOpAlgoBase__SWIG_6(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_, arg5 ByteVector) (_swig_ret OpAlgoBase) {
	var swig_r OpAlgoBase
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (OpAlgoBase)(SwigcptrOpAlgoBase(C._wrap_new_OpAlgoBase__SWIG_6_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func NewOpAlgoBase(a ...interface{}) OpAlgoBase {
	argc := len(a)
	if argc == 0 {
		return NewOpAlgoBase__SWIG_0()
	}
	if argc == 4 {
		return NewOpAlgoBase__SWIG_2(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_))
	}
	if argc == 5 {
		if _, ok := a[4].(SwigcptrKp_OpAlgoBase_KomputeWorkgroup); !ok {
			goto check_3
		}
		return NewOpAlgoBase__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_), a[4].(Kp_OpAlgoBase_KomputeWorkgroup))
	}
check_3:
	if argc == 5 {
		if _, ok := a[4].(string); !ok {
			goto check_4
		}
		return NewOpAlgoBase__SWIG_4(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_), a[4].(string))
	}
check_4:
	if argc == 5 {
		return NewOpAlgoBase__SWIG_6(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_), a[4].(ByteVector))
	}
	if argc == 6 {
		if _, ok := a[4].(SwigcptrByteVector); !ok {
			goto check_6
		}
		return NewOpAlgoBase__SWIG_5(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_), a[4].(ByteVector), a[5].(Kp_OpAlgoBase_KomputeWorkgroup))
	}
check_6:
	if argc == 6 {
		return NewOpAlgoBase__SWIG_3(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_), a[4].(string), a[5].(Kp_OpAlgoBase_KomputeWorkgroup))
	}
	panic("No match for overloaded function call")
}

func DeleteOpAlgoBase(arg1 OpAlgoBase) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpAlgoBase_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpAlgoBase) Init() {
	_swig_i_0 := arg1
	C._wrap_OpAlgoBase_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpAlgoBase) Record() {
	_swig_i_0 := arg1
	C._wrap_OpAlgoBase_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpAlgoBase) PreEval() {
	_swig_i_0 := arg1
	C._wrap_OpAlgoBase_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpAlgoBase) PostEval() {
	_swig_i_0 := arg1
	C._wrap_OpAlgoBase_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrOpAlgoBase) SwigIsOpBase() {
}

func (p SwigcptrOpAlgoBase) SwigGetOpBase() OpBase {
	return SwigcptrOpBase(p.Swigcptr())
}

type OpAlgoBase interface {
	Swigcptr() uintptr
	SwigIsOpAlgoBase()
	Init()
	Record()
	PreEval()
	PostEval()
	SwigIsOpBase()
	SwigGetOpBase() OpBase
}

type SwigcptrOpAlgoLhsRhsOut uintptr

func (p SwigcptrOpAlgoLhsRhsOut) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpAlgoLhsRhsOut) SwigIsOpAlgoLhsRhsOut() {
}

func NewOpAlgoLhsRhsOut__SWIG_0() (_swig_ret OpAlgoLhsRhsOut) {
	var swig_r OpAlgoLhsRhsOut
	swig_r = (OpAlgoLhsRhsOut)(SwigcptrOpAlgoLhsRhsOut(C._wrap_new_OpAlgoLhsRhsOut__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewOpAlgoLhsRhsOut__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_, arg5 Kp_OpAlgoBase_KomputeWorkgroup) (_swig_ret OpAlgoLhsRhsOut) {
	var swig_r OpAlgoLhsRhsOut
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (OpAlgoLhsRhsOut)(SwigcptrOpAlgoLhsRhsOut(C._wrap_new_OpAlgoLhsRhsOut__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func NewOpAlgoLhsRhsOut__SWIG_2(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) (_swig_ret OpAlgoLhsRhsOut) {
	var swig_r OpAlgoLhsRhsOut
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (OpAlgoLhsRhsOut)(SwigcptrOpAlgoLhsRhsOut(C._wrap_new_OpAlgoLhsRhsOut__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewOpAlgoLhsRhsOut(a ...interface{}) OpAlgoLhsRhsOut {
	argc := len(a)
	if argc == 0 {
		return NewOpAlgoLhsRhsOut__SWIG_0()
	}
	if argc == 4 {
		return NewOpAlgoLhsRhsOut__SWIG_2(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_))
	}
	if argc == 5 {
		return NewOpAlgoLhsRhsOut__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_), a[4].(Kp_OpAlgoBase_KomputeWorkgroup))
	}
	panic("No match for overloaded function call")
}

func DeleteOpAlgoLhsRhsOut(arg1 OpAlgoLhsRhsOut) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpAlgoLhsRhsOut_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpAlgoLhsRhsOut) Init() {
	_swig_i_0 := arg1
	C._wrap_OpAlgoLhsRhsOut_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpAlgoLhsRhsOut) Record() {
	_swig_i_0 := arg1
	C._wrap_OpAlgoLhsRhsOut_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpAlgoLhsRhsOut) PostEval() {
	_swig_i_0 := arg1
	C._wrap_OpAlgoLhsRhsOut_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOpAlgoLhsRhsOut) PreEval() {
	C._wrap_OpAlgoLhsRhsOut_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_base))
}

func (p SwigcptrOpAlgoLhsRhsOut) SwigIsOpAlgoBase() {
}

func (p SwigcptrOpAlgoLhsRhsOut) SwigGetOpAlgoBase() OpAlgoBase {
	return SwigcptrOpAlgoBase(p.Swigcptr())
}

func (p SwigcptrOpAlgoLhsRhsOut) SwigIsOpBase() {
}

func (p SwigcptrOpAlgoLhsRhsOut) SwigGetOpBase() OpBase {
	return SwigcptrOpBase(p.Swigcptr())
}

type OpAlgoLhsRhsOut interface {
	Swigcptr() uintptr
	SwigIsOpAlgoLhsRhsOut()
	Init()
	Record()
	PostEval()
	PreEval()
	SwigIsOpAlgoBase()
	SwigGetOpAlgoBase() OpAlgoBase
	SwigIsOpBase()
	SwigGetOpBase() OpBase
}

type SwigcptrOpMult uintptr

func (p SwigcptrOpMult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpMult) SwigIsOpMult() {
}

func NewOpMult__SWIG_0() (_swig_ret OpMult) {
	var swig_r OpMult
	swig_r = (OpMult)(SwigcptrOpMult(C._wrap_new_OpMult__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewOpMult__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_, arg5 Kp_OpAlgoBase_KomputeWorkgroup) (_swig_ret OpMult) {
	var swig_r OpMult
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (OpMult)(SwigcptrOpMult(C._wrap_new_OpMult__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func NewOpMult__SWIG_2(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) (_swig_ret OpMult) {
	var swig_r OpMult
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (OpMult)(SwigcptrOpMult(C._wrap_new_OpMult__SWIG_2_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewOpMult(a ...interface{}) OpMult {
	argc := len(a)
	if argc == 0 {
		return NewOpMult__SWIG_0()
	}
	if argc == 4 {
		return NewOpMult__SWIG_2(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_))
	}
	if argc == 5 {
		return NewOpMult__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_), a[4].(Kp_OpAlgoBase_KomputeWorkgroup))
	}
	panic("No match for overloaded function call")
}

func DeleteOpMult(arg1 OpMult) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpMult_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrOpMult) Init() {
	C._wrap_OpMult_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOpMult) Record() {
	C._wrap_OpMult_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOpMult) PreEval() {
	C._wrap_OpMult_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrOpMult) PostEval() {
	C._wrap_OpMult_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_base))
}

func (p SwigcptrOpMult) SwigIsOpAlgoBase() {
}

func (p SwigcptrOpMult) SwigGetOpAlgoBase() OpAlgoBase {
	return SwigcptrOpAlgoBase(p.Swigcptr())
}

func (p SwigcptrOpMult) SwigIsOpBase() {
}

func (p SwigcptrOpMult) SwigGetOpBase() OpBase {
	return SwigcptrOpBase(p.Swigcptr())
}

type OpMult interface {
	Swigcptr() uintptr
	SwigIsOpMult()
	Init()
	Record()
	PreEval()
	PostEval()
	SwigIsOpAlgoBase()
	SwigGetOpAlgoBase() OpAlgoBase
	SwigIsOpBase()
	SwigGetOpBase() OpBase
}

type SwigcptrOpTensorCopy uintptr

func (p SwigcptrOpTensorCopy) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpTensorCopy) SwigIsOpTensorCopy() {
}

func NewOpTensorCopy__SWIG_0() (_swig_ret OpTensorCopy) {
	var swig_r OpTensorCopy
	swig_r = (OpTensorCopy)(SwigcptrOpTensorCopy(C._wrap_new_OpTensorCopy__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewOpTensorCopy__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) (_swig_ret OpTensorCopy) {
	var swig_r OpTensorCopy
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (OpTensorCopy)(SwigcptrOpTensorCopy(C._wrap_new_OpTensorCopy__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewOpTensorCopy(a ...interface{}) OpTensorCopy {
	argc := len(a)
	if argc == 0 {
		return NewOpTensorCopy__SWIG_0()
	}
	if argc == 4 {
		return NewOpTensorCopy__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

func DeleteOpTensorCopy(arg1 OpTensorCopy) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpTensorCopy_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCopy) Init() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCopy_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCopy) Record() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCopy_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCopy) PreEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCopy_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorCopy) PostEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorCopy_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrOpTensorCopy) SwigIsOpBase() {
}

func (p SwigcptrOpTensorCopy) SwigGetOpBase() OpBase {
	return SwigcptrOpBase(p.Swigcptr())
}

type OpTensorCopy interface {
	Swigcptr() uintptr
	SwigIsOpTensorCopy()
	Init()
	Record()
	PreEval()
	PostEval()
	SwigIsOpBase()
	SwigGetOpBase() OpBase
}

type SwigcptrOpTensorSyncDevice uintptr

func (p SwigcptrOpTensorSyncDevice) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpTensorSyncDevice) SwigIsOpTensorSyncDevice() {
}

func NewOpTensorSyncDevice__SWIG_0() (_swig_ret OpTensorSyncDevice) {
	var swig_r OpTensorSyncDevice
	swig_r = (OpTensorSyncDevice)(SwigcptrOpTensorSyncDevice(C._wrap_new_OpTensorSyncDevice__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewOpTensorSyncDevice__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) (_swig_ret OpTensorSyncDevice) {
	var swig_r OpTensorSyncDevice
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (OpTensorSyncDevice)(SwigcptrOpTensorSyncDevice(C._wrap_new_OpTensorSyncDevice__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewOpTensorSyncDevice(a ...interface{}) OpTensorSyncDevice {
	argc := len(a)
	if argc == 0 {
		return NewOpTensorSyncDevice__SWIG_0()
	}
	if argc == 4 {
		return NewOpTensorSyncDevice__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

func DeleteOpTensorSyncDevice(arg1 OpTensorSyncDevice) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpTensorSyncDevice_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncDevice) Init() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncDevice_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncDevice) Record() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncDevice_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncDevice) PreEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncDevice_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncDevice) PostEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncDevice_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrOpTensorSyncDevice) SwigIsOpBase() {
}

func (p SwigcptrOpTensorSyncDevice) SwigGetOpBase() OpBase {
	return SwigcptrOpBase(p.Swigcptr())
}

type OpTensorSyncDevice interface {
	Swigcptr() uintptr
	SwigIsOpTensorSyncDevice()
	Init()
	Record()
	PreEval()
	PostEval()
	SwigIsOpBase()
	SwigGetOpBase() OpBase
}

type SwigcptrOpTensorSyncLocal uintptr

func (p SwigcptrOpTensorSyncLocal) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpTensorSyncLocal) SwigIsOpTensorSyncLocal() {
}

func NewOpTensorSyncLocal__SWIG_0() (_swig_ret OpTensorSyncLocal) {
	var swig_r OpTensorSyncLocal
	swig_r = (OpTensorSyncLocal)(SwigcptrOpTensorSyncLocal(C._wrap_new_OpTensorSyncLocal__SWIG_0_kompute_209ca5717ea3ce19()))
	return swig_r
}

func NewOpTensorSyncLocal__SWIG_1(arg1 Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_, arg2 Std_shared_ptr_Sl_vk_Device_Sg_, arg3 Std_shared_ptr_Sl_vk_CommandBuffer_Sg_, arg4 Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) (_swig_ret OpTensorSyncLocal) {
	var swig_r OpTensorSyncLocal
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (OpTensorSyncLocal)(SwigcptrOpTensorSyncLocal(C._wrap_new_OpTensorSyncLocal__SWIG_1_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewOpTensorSyncLocal(a ...interface{}) OpTensorSyncLocal {
	argc := len(a)
	if argc == 0 {
		return NewOpTensorSyncLocal__SWIG_0()
	}
	if argc == 4 {
		return NewOpTensorSyncLocal__SWIG_1(a[0].(Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_), a[1].(Std_shared_ptr_Sl_vk_Device_Sg_), a[2].(Std_shared_ptr_Sl_vk_CommandBuffer_Sg_), a[3].(Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

func DeleteOpTensorSyncLocal(arg1 OpTensorSyncLocal) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_OpTensorSyncLocal_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncLocal) Init() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncLocal_init_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncLocal) Record() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncLocal_record_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncLocal) PreEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncLocal_preEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrOpTensorSyncLocal) PostEval() {
	_swig_i_0 := arg1
	C._wrap_OpTensorSyncLocal_postEval_kompute_209ca5717ea3ce19(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrOpTensorSyncLocal) SwigIsOpBase() {
}

func (p SwigcptrOpTensorSyncLocal) SwigGetOpBase() OpBase {
	return SwigcptrOpBase(p.Swigcptr())
}

type OpTensorSyncLocal interface {
	Swigcptr() uintptr
	SwigIsOpTensorSyncLocal()
	Init()
	Record()
	PreEval()
	PostEval()
	SwigIsOpBase()
	SwigGetOpBase() OpBase
}


type SwigcptrStd_shared_ptr_Sl_vk_Queue_Sg_ uintptr
type Std_shared_ptr_Sl_vk_Queue_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_vk_Queue_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_kp_Sequence_Sg_ uintptr
type Std_shared_ptr_Sl_kp_Sequence_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_kp_Sequence_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_ uintptr
type Std_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_shared_ptr_Sl_kp_Tensor_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrUint32_t uintptr
type Uint32_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrUint32_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_kp_Tensor_Sg_ uintptr
type Std_shared_ptr_Sl_kp_Tensor_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_kp_Tensor_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrUint64_t uintptr
type Uint64_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrUint64_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrKp_OpAlgoBase_KomputeWorkgroup uintptr
type Kp_OpAlgoBase_KomputeWorkgroup interface {
	Swigcptr() uintptr;
}
func (p SwigcptrKp_OpAlgoBase_KomputeWorkgroup) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_vk_Device_Sg_ uintptr
type Std_shared_ptr_Sl_vk_Device_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_vk_Device_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_vk_PhysicalDevice_Sg_ uintptr
type Std_shared_ptr_Sl_vk_PhysicalDevice_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_vk_PhysicalDevice_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_vk_Instance_Sg_ uintptr
type Std_shared_ptr_Sl_vk_Instance_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_vk_Instance_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_array_Sl_uint32_t_Sc_1_Sg_ uintptr
type Std_array_Sl_uint32_t_Sc_1_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_array_Sl_uint32_t_Sc_1_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_uint32_t_Sg_ uintptr
type Std_vector_Sl_uint32_t_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_uint32_t_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVk_PipelineStageFlagBits uintptr
type Vk_PipelineStageFlagBits interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVk_PipelineStageFlagBits) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVk_AccessFlagBits uintptr
type Vk_AccessFlagBits interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVk_AccessFlagBits) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVk_DescriptorBufferInfo uintptr
type Vk_DescriptorBufferInfo interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVk_DescriptorBufferInfo) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_vk_CommandBuffer_Sg_ uintptr
type Std_shared_ptr_Sl_vk_CommandBuffer_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_shared_ptr_Sl_vk_CommandBuffer_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

